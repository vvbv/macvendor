#!/usr/bin/env python

import os
import sys
import urllib2

from os.path import expanduser

HOME = expanduser("~")
ENV_FOLDER = HOME + "/.macvendors"
VENDORS_FILE = ENV_FOLDER + "/oui.txt"
UPDATE_VENDORS = False
ERROR_MESSAGE = "macvendor [ --update, --no-update ] [ XX:XX:XX:XX:XX:XX ]"

if len(sys.argv) < 3:
    print( ERROR_MESSAGE )
    exit()

mac_to_find = sys.argv[2:][0].upper().strip()

if sys.argv[1:][0] == "--update":
    UPDATE_VENDORS = True
elif sys.argv[1:][0] == "--no-update":
    UPDATE_VENDORS = False
else:
    print( ERROR_MESSAGE )
    exit()

def downloadVendors():
    print("Updating list of vendors.")
    url = "http://standards-oui.ieee.org/oui.txt"
    u = urllib2.urlopen(url)
    f = open(VENDORS_FILE, 'wb')
    meta = u.info()
    file_size = int(meta.getheaders("Content-Length")[0])
    print "Downloading %s %s bytes" % ("list, size:", file_size)

    file_size_dl = 0
    block_sz = 8192
    while True:
        buffer = u.read(block_sz)
        if not buffer:
            break

        file_size_dl += len(buffer)
        f.write(buffer)
        status = r"%10d  [%3.2f%%]" % (file_size_dl, file_size_dl * 100. / file_size)
        status = status + chr(8)*(len(status)+1)
        print status,
    f.close()
    print ("")

def internet_on():
    try:
        urllib2.urlopen('https://duckduckgo.com/', timeout=5)
        return True
    except urllib2.URLError as err: 
        return False

if not os.path.isdir( ENV_FOLDER ):
    os.makedirs( ENV_FOLDER )
    downloadVendors()
elif os.path.isdir( ENV_FOLDER ) and not os.path.isfile( VENDORS_FILE ):
    downloadVendors()
else:
    if internet_on():
        if UPDATE_VENDORS:
            downloadVendors()


vendors_file  = open(VENDORS_FILE)
line = vendors_file.readline()
while line:
    if line.find("(hex)") != -1:

        line = line.replace("(hex)", "")
        line = line.replace("\t", "")
        line = line.replace("   ", "\n")
        raw = line.splitlines()

        first_mac = raw[0].replace("-",":")
        completed_first_mac = first_mac + ":00:00:00"
        last_mac = raw[0].replace("-",":")
        completed_last_mac = last_mac + ":FF:FF:FF"
        manufacturer = raw[1]

        if mac_to_find[0:8] == first_mac[0:8]:
            print( mac_to_find + ", " + manufacturer )
            break

    line = vendors_file.readline()

